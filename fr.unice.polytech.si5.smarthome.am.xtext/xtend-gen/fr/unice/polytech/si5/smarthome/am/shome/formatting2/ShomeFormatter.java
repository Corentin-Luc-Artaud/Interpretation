/**
 * generated by Xtext 2.14.0
 */
package fr.unice.polytech.si5.smarthome.am.shome.formatting2;

import com.google.inject.Inject;
import fr.unice.polytech.si5.smarthome.am.shome.services.ShomeGrammarAccess;
import fr.unice.polytech.si5.smarthome.am.smart_home.Action;
import fr.unice.polytech.si5.smarthome.am.smart_home.Actor;
import fr.unice.polytech.si5.smarthome.am.smart_home.Condition;
import fr.unice.polytech.si5.smarthome.am.smart_home.Home;
import fr.unice.polytech.si5.smarthome.am.smart_home.Occurence;
import fr.unice.polytech.si5.smarthome.am.smart_home.Subject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class ShomeFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private ShomeGrammarAccess _shomeGrammarAccess;
  
  protected void _format(final Home home, @Extension final IFormattableDocument document) {
    EList<Subject> _ownedSubjects = home.getOwnedSubjects();
    for (final Subject subject : _ownedSubjects) {
      document.<Subject>format(subject);
    }
    EList<Actor> _ownedActors = home.getOwnedActors();
    for (final Actor actor : _ownedActors) {
      document.<Actor>format(actor);
    }
    EList<Condition> _ownedConditions = home.getOwnedConditions();
    for (final Condition condition : _ownedConditions) {
      document.<Condition>format(condition);
    }
    EList<Occurence> _ownedOccurences = home.getOwnedOccurences();
    for (final Occurence occurence : _ownedOccurences) {
      document.<Occurence>format(occurence);
    }
  }
  
  protected void _format(final Subject subject, @Extension final IFormattableDocument document) {
    EList<Action> _ownedActions = subject.getOwnedActions();
    for (final Action action : _ownedActions) {
      document.<Action>format(action);
    }
  }
  
  public void format(final Object subject, final IFormattableDocument document) {
    if (subject instanceof XtextResource) {
      _format((XtextResource)subject, document);
      return;
    } else if (subject instanceof Subject) {
      _format((Subject)subject, document);
      return;
    } else if (subject instanceof Home) {
      _format((Home)subject, document);
      return;
    } else if (subject instanceof EObject) {
      _format((EObject)subject, document);
      return;
    } else if (subject == null) {
      _format((Void)null, document);
      return;
    } else if (subject != null) {
      _format(subject, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(subject, document).toString());
    }
  }
}
