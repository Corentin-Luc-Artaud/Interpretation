/*
 * generated by Xtext 2.14.0
 */
package fr.unice.polytech.si5.smarthome.am.shome.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import fr.unice.polytech.si5.smarthome.am.shome.ide.contentassist.antlr.internal.InternalShomeParser;
import fr.unice.polytech.si5.smarthome.am.shome.services.ShomeGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class ShomeParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(ShomeGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, ShomeGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getAConditionAccess().getAlternatives(), "rule__ACondition__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getHomeAccess().getGroup(), "rule__Home__Group__0");
			builder.put(grammarAccess.getSubjectAccess().getGroup(), "rule__Subject__Group__0");
			builder.put(grammarAccess.getSubjectAccess().getGroup_5(), "rule__Subject__Group_5__0");
			builder.put(grammarAccess.getActorAccess().getGroup(), "rule__Actor__Group__0");
			builder.put(grammarAccess.getOccurenceAccess().getGroup(), "rule__Occurence__Group__0");
			builder.put(grammarAccess.getOccurenceAccess().getGroup_2(), "rule__Occurence__Group_2__0");
			builder.put(grammarAccess.getTimeEleapsedConditionAccess().getGroup(), "rule__TimeEleapsedCondition__Group__0");
			builder.put(grammarAccess.getTimeEleapsedConditionAccess().getGroup_6(), "rule__TimeEleapsedCondition__Group_6__0");
			builder.put(grammarAccess.getConditionAccess().getGroup(), "rule__Condition__Group__0");
			builder.put(grammarAccess.getConditionAccess().getGroup_1(), "rule__Condition__Group_1__0");
			builder.put(grammarAccess.getConditionAccess().getGroup_5(), "rule__Condition__Group_5__0");
			builder.put(grammarAccess.getHomeTimeStampAccess().getGroup(), "rule__HomeTimeStamp__Group__0");
			builder.put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
			builder.put(grammarAccess.getHomeAccess().getOwnedSubjectsAssignment_3(), "rule__Home__OwnedSubjectsAssignment_3");
			builder.put(grammarAccess.getHomeAccess().getOwnedSubjectsAssignment_4(), "rule__Home__OwnedSubjectsAssignment_4");
			builder.put(grammarAccess.getHomeAccess().getOwnedActorsAssignment_5(), "rule__Home__OwnedActorsAssignment_5");
			builder.put(grammarAccess.getHomeAccess().getOwnedConditionsAssignment_6(), "rule__Home__OwnedConditionsAssignment_6");
			builder.put(grammarAccess.getHomeAccess().getOwnedConditionsAssignment_7(), "rule__Home__OwnedConditionsAssignment_7");
			builder.put(grammarAccess.getHomeAccess().getOwnedOccurencesAssignment_8(), "rule__Home__OwnedOccurencesAssignment_8");
			builder.put(grammarAccess.getHomeAccess().getOwnedOccurencesAssignment_9(), "rule__Home__OwnedOccurencesAssignment_9");
			builder.put(grammarAccess.getSubjectAccess().getNameAssignment_1(), "rule__Subject__NameAssignment_1");
			builder.put(grammarAccess.getSubjectAccess().getOwnedActionsAssignment_4(), "rule__Subject__OwnedActionsAssignment_4");
			builder.put(grammarAccess.getSubjectAccess().getOwnedActionsAssignment_5_1(), "rule__Subject__OwnedActionsAssignment_5_1");
			builder.put(grammarAccess.getActorAccess().getNameAssignment_2(), "rule__Actor__NameAssignment_2");
			builder.put(grammarAccess.getOccurenceAccess().getOwnedTimeAssignment_0(), "rule__Occurence__OwnedTimeAssignment_0");
			builder.put(grammarAccess.getOccurenceAccess().getActorAssignment_2_0(), "rule__Occurence__ActorAssignment_2_0");
			builder.put(grammarAccess.getOccurenceAccess().getActionAssignment_3(), "rule__Occurence__ActionAssignment_3");
			builder.put(grammarAccess.getTimeEleapsedConditionAccess().getActionAssignment_1(), "rule__TimeEleapsedCondition__ActionAssignment_1");
			builder.put(grammarAccess.getTimeEleapsedConditionAccess().getOwnedTimestampEleapsedAssignment_3(), "rule__TimeEleapsedCondition__OwnedTimestampEleapsedAssignment_3");
			builder.put(grammarAccess.getTimeEleapsedConditionAccess().getActionsAssignment_5(), "rule__TimeEleapsedCondition__ActionsAssignment_5");
			builder.put(grammarAccess.getTimeEleapsedConditionAccess().getActionsAssignment_6_1(), "rule__TimeEleapsedCondition__ActionsAssignment_6_1");
			builder.put(grammarAccess.getConditionAccess().getActorAssignment_1_0(), "rule__Condition__ActorAssignment_1_0");
			builder.put(grammarAccess.getConditionAccess().getActionAssignment_2(), "rule__Condition__ActionAssignment_2");
			builder.put(grammarAccess.getConditionAccess().getActionsAssignment_4(), "rule__Condition__ActionsAssignment_4");
			builder.put(grammarAccess.getConditionAccess().getActionsAssignment_5_1(), "rule__Condition__ActionsAssignment_5_1");
			builder.put(grammarAccess.getHomeTimeStampAccess().getHourAssignment_0(), "rule__HomeTimeStamp__HourAssignment_0");
			builder.put(grammarAccess.getHomeTimeStampAccess().getMinAssignment_2(), "rule__HomeTimeStamp__MinAssignment_2");
			builder.put(grammarAccess.getHomeTimeStampAccess().getSecAssignment_4(), "rule__HomeTimeStamp__SecAssignment_4");
			builder.put(grammarAccess.getActionAccess().getNameAssignment_1(), "rule__Action__NameAssignment_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private ShomeGrammarAccess grammarAccess;

	@Override
	protected InternalShomeParser createParser() {
		InternalShomeParser result = new InternalShomeParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ShomeGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ShomeGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
